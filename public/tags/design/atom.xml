<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title> - design</title>
	<subtitle>the personal site of Drew Powers</subtitle>
	<link href="https://pow.rs/tags/design/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://pow.rs"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-08-02T00:00:00+00:00</updated>
	<id>https://pow.rs/tags/design/atom.xml</id>
	<entry xml:lang="en">
		<title>responsive type scales: the correct way to handle font sizes in css</title>
		<published>2020-08-02T00:00:00+00:00</published>
		<updated>2020-08-02T00:00:00+00:00</updated>
		<link href="https://pow.rs/blog/responsive-type-scales-in-css/" type="text/html"/>
		<id>https://pow.rs/blog/responsive-type-scales-in-css/</id>
		<content type="html">&lt;p&gt;Are you making typography on the web harder on yourself than it needs to be? Probably. What if I
told you I could give you a typographic scale that is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Universal:&lt;&#x2F;strong&gt; works in CSS, Sass, and CSS-in-JS&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Simple:&lt;&#x2F;strong&gt; easy to set up, quick to learn&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Stylish:&lt;&#x2F;strong&gt; actually looks good (it follows typographic principles)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Automatically-responsive:&lt;&#x2F;strong&gt; makes responsive text sizes easier than you‚Äòre used to&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Adjustable&lt;&#x2F;strong&gt; you can actually tweak it to taste&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Would you not use it? Well good news, friends, it does exist! And it‚Äôs called &lt;strong&gt;Responsive Type
Scales.&lt;&#x2F;strong&gt; And I don‚Äôt know for the life of me why it‚Äôs not the norm. Maybe it needs a more
buzzworthy name. Maybe it needs a landing page (ü§î actually it probably does).&lt;&#x2F;p&gt;
&lt;p&gt;This blog post will cover:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Responsive Type Scales: the basics&lt;&#x2F;li&gt;
&lt;li&gt;Responsive Type Scales: the theory&lt;&#x2F;li&gt;
&lt;li&gt;tips &#x2F; faqs&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;‚ÄúBut is this for me?‚Äù You‚Äôll ask. &lt;strong&gt;Yes. Yes, this is for you.&lt;&#x2F;strong&gt; If you type words and put them on
the internet, you should use this. You can check the ‚ÄúFAQ‚Äù¬†section at the end to learn how it works
with special edge cases and such.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;part-1-responsive-type-scales&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#part-1-responsive-type-scales&quot; aria-label=&quot;Anchor link for: part-1-responsive-type-scales&quot;&gt;üîó&lt;&#x2F;a&gt;part 1: responsive type scales&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;getting-started&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#getting-started&quot; aria-label=&quot;Anchor link for: getting-started&quot;&gt;üîó&lt;&#x2F;a&gt;getting started&lt;&#x2F;h3&gt;
&lt;p&gt;Typographic scales are a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Goldilocks_principle&quot;&gt;Goldilocks solution&lt;&#x2F;a&gt;
to font sizes. We don‚Äôt want too many font sizes in our site, but we need just enough to have the
design look good and have structural hierarchy. We need just the right amount.&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôve ever used ‚Äúshirt size‚Äù names like &lt;code&gt;font-s&lt;&#x2F;code&gt;, &lt;code&gt;font-m&lt;&#x2F;code&gt;, and &lt;code&gt;font-l&lt;&#x2F;code&gt; (small, medium, and
large, respectively), you‚Äôve likely run into the ‚Äútoo few‚Äù end of the spectrum (unless you resort to
dumb names like &lt;code&gt;font-xxxxl&lt;&#x2F;code&gt;). But the real problem with this approach is this isn‚Äôt responsive
(unless you resort to even dumber names like &lt;code&gt;class=&amp;quot;font-xxxl font-lg-xxxxl&amp;quot;&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;A responsive type scale solves all of the above: &lt;strong&gt;gives you just the right amount&lt;&#x2F;strong&gt; (it‚Äôs
configurable, so you can set the right number you need), and &lt;strong&gt;handles responsive font sizes
elegantly&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;But before we get ahead of ourselves, you‚Äôre probably wondering ‚Äúhow does it look in action?‚Äù (or
you just want to copy + paste something and then leave). Let‚Äôs dive into an example first to show it
in practice, then we‚Äôll step back to explain the principles and reasoning. After all, no matter how
solid a concept is theoretically, will you use it if it has bad DX? Rest assured this is quick to
learn, easy to use, and solves your font problems.&lt;&#x2F;p&gt;
&lt;p&gt;To get started, copy some CSS classes into your styles (don‚Äôt worry; we‚Äôll explain how we generated
these numbers later):&lt;&#x2F;p&gt;
&lt;!-- prettier-ignore --&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* fonts.css *&#x2F;
&#x2F;* (note: ignore the em values for now and only focus on the class names) *&#x2F;



&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u18 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;11.390625em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;9.950627481136905em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u16 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8.692673779389363em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u15 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7.59375em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u14 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;6.63375165409127em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5.795115852926242em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u12 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5.0625em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u11 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4.422501102727513em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3.8634105686174953em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u9  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3.375em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u8  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.9483340684850083em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u7  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.575607045744997em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u6  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.25em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u5  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.9655560456566725em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u4  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.7170713638299977em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u3  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.5em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u2  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.3103706971044482em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-u1  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.1447142425533319em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d1  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.8735804647362989em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d2  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.7631428283688879em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d3  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.6666666666666666em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d4  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5823869764908659em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d5  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5087618855792586em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d6  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.4444444444444444em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d7  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.3882579843272439em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d8  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.3391745903861724em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d9  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.2962962962962963em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.2588386562181626em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d11 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.22611639359078162em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d12 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.19753086419753085em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d13 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.17255910414544176em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d14 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.15074426239385438em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d15 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.13168724279835392em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d16 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.11503940276362785em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d17 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.10049617492923625em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-d18 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0877914951989026em &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Don‚Äôt want to use CSS classes? You could use
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography&#x2F;blob&#x2F;master&#x2F;variables.css&quot;&gt;CSS variables&lt;&#x2F;a&gt; or
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography&#x2F;blob&#x2F;master&#x2F;index.js&quot;&gt;JS values&lt;&#x2F;a&gt; or even Sass
variables‚Äîit is universal after all and you can translate this into whatever works best&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Then just sprinkle the utilities in whenever you need it:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;font-u6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;I‚Äôm an h1 so I‚Äôm 6 steps up from the base size&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;font-u5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;
  I‚Äôm an h2 so I‚Äôm slightly smaller than h1, but still 5 steps up from the base
  size
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;

&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;small &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;font-d1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;I‚Äôm 1 step down from the base size&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;small&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What if that &lt;code&gt;h1&lt;&#x2F;code&gt; tag needs to be a little bigger? No problem; bump it up one to &lt;code&gt;font-u7&lt;&#x2F;code&gt;. Or
smaller: &lt;code&gt;font-u5&lt;&#x2F;code&gt;. They‚Äôre just numbers; you go up (&lt;code&gt;font-u*&lt;&#x2F;code&gt;) or down (&lt;code&gt;font-d*&lt;&#x2F;code&gt;) as you need to.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nesting&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#nesting&quot; aria-label=&quot;Anchor link for: nesting&quot;&gt;üîó&lt;&#x2F;a&gt;nesting&lt;&#x2F;h3&gt;
&lt;p&gt;Since we‚Äôre dealing with &lt;code&gt;em&lt;&#x2F;code&gt;s, we can nest sizes. Say we had an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;&#x2F;code&gt; tag we wanted to be big, but
inside that we have a subheading we want to be the same size as the base font. How would we
accomplish that? Easy:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;font-u3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;
  I‚Äôm 3 steps up from the base size
  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;small &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;font-d3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;&amp;gt;I‚Äôm the same size as the base (3 - 3)&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;small&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;By thinking in terms of moving ‚Äúup‚Äù or ‚Äúdown‚Äù a scale, you‚Äôre starting to think in relationships,
which is how type works. Typography is less about absolute sizes, and is more about how much bigger
or smaller one size is to another (how one ‚Äúrelates‚Äù to another).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;But if this nests, won‚Äôt this be a pain to keep track of when you‚Äôre several components deep?&lt;&#x2F;em&gt; If
you‚Äôre working in components, it‚Äôs probably smart to reset the font size back to &lt;code&gt;1rem&lt;&#x2F;code&gt; (root font
size) so sizes within a component are predictable:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
  font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* reset font size back to base *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This may seem like an annoyance at first if you haven‚Äôt done this before, but this is actually great
practice. This will be an important principle for responsive sizes going forward.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;responsive-sizes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#responsive-sizes&quot; aria-label=&quot;Anchor link for: responsive-sizes&quot;&gt;üîó&lt;&#x2F;a&gt;responsive sizes&lt;&#x2F;h3&gt;
&lt;p&gt;Responsive font sizes can be a nightmare at scale. Fortunately, using this system, &lt;strong&gt;you only have
to set a component‚Äôs base sizes for each breakpoint.&lt;&#x2F;strong&gt; But to add this, let‚Äôs copy the the same CSS
values from above, but this time we‚Äôll use CSS variables and swap out the &lt;code&gt;em&lt;&#x2F;code&gt;s for &lt;code&gt;rem&lt;&#x2F;code&gt;s:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* fonts.css (expanded from above) *&#x2F;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;root &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
  --font-u18r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;11.390625rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* the ‚Äúr‚Äù in ‚Äúu18r‚Äù stands for ‚Äúroot‚Äù *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;--font-u17r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;9.950627481136905rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u16r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8.692673779389363rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u15r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7.59375rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* ‚Ä¶ (add the rest from above) *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then in your component styles, you only need to change the base size for its breakpoints:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
  font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-d1r); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* small screens: 1 step down *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(min-width: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;600px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
    font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1rem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* medium screens: base size *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(min-width: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1200px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
    font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u1r); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* large screens: 1 step up *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(min-width: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1800px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) {
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyComponent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
    font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u2r); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* extra large screens: 2 steps up *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}
}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You don‚Äôt have to do anything else! Because we‚Äôre using &lt;code&gt;em&lt;&#x2F;code&gt;s, our components all scaled while
preserving their typographic relationships. However, for the base component size, we did use &lt;code&gt;rem&lt;&#x2F;code&gt;s
instead of &lt;code&gt;em&lt;&#x2F;code&gt;s to blow away any nested styles we may have had to deal with otherwise
(&lt;a href=&quot;https:&#x2F;&#x2F;visly.app&#x2F;blog&#x2F;layout-isolated-components&quot;&gt;following good principles of layout isolation&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;further-reading&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#further-reading&quot; aria-label=&quot;Anchor link for: further-reading&quot;&gt;üîó&lt;&#x2F;a&gt;further reading&lt;&#x2F;h3&gt;
&lt;p&gt;Congratulations! You‚Äôve just learned the whole system. üéâ From here you may want to explore the
following:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography&quot;&gt;responsive-typography&lt;&#x2F;a&gt; contains all the code
above but packaged in a convenient npm wrapper&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codesandbox.io&#x2F;s&#x2F;responsive-typography-app-mc613?file=&#x2F;src&#x2F;styles.css&quot;&gt;CodeSandbox example&lt;&#x2F;a&gt;
showing how responsive type scales can work in an app&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;But perhaps even after seeing how it works, you have some lingering ‚Äúwhy‚Äù questions. Such as: &lt;em&gt;how
big is a ‚Äústep‚Äù in pixels?&lt;&#x2F;em&gt; or &lt;em&gt;what if I don‚Äôt like the scale above?&lt;&#x2F;em&gt; or &lt;em&gt;is this really simpler
than other typographic libraries?&lt;&#x2F;em&gt; Read on to get a little more into why this approach can work for
everyone.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;part-2-why-responsive-type-scales-work&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#part-2-why-responsive-type-scales-work&quot; aria-label=&quot;Anchor link for: part-2-why-responsive-type-scales-work&quot;&gt;üîó&lt;&#x2F;a&gt;part 2: why responsive type scales work&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Note: this section is completely &lt;strong&gt;optional&lt;&#x2F;strong&gt; to read‚Äîyou have everything you need to start using a
responsive type scale already. Everything that follows is theory and extra information if you‚Äôd like
to understand the concepts a bit deeper.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-principles-of-a-type-scale&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-principles-of-a-type-scale&quot; aria-label=&quot;Anchor link for: 3-principles-of-a-type-scale&quot;&gt;üîó&lt;&#x2F;a&gt;3 principles of a type scale&lt;&#x2F;h3&gt;
&lt;figure&gt;
  &lt;img src=&quot;&#x2F;assets&#x2F;posts&#x2F;responsive-type-scales-in-css&#x2F;hypnerotomachia-poliphili.jpg&quot; alt=&quot;Hypnerotomachia Poliphili&quot; &#x2F;&gt;
  &lt;figcaption&gt;The &lt;em&gt;Hypnerotomachia Poliphili&lt;&#x2F;em&gt; (try saying that 5 times fast) is a stunning Renaissance-era example of flawless typography. And like all printed material, it uses a typographic scale to achieve its beauty.&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;As we mentioned above, typographic scales solve the Goldilocks problem of font sizes: you need just
enough to make the design feel complete, but not too many.&lt;&#x2F;p&gt;
&lt;p&gt;Typographic scales are so effective because they‚Äôve had time to mature. At over 600 years old,
they‚Äôre as ancient as the printing press itself (they don‚Äôt look a day over 500 though). You‚Äôve
encountered typographic scales every time you‚Äôve used a word processor like Google Docs. While
you‚Äôll find some slight variation from program to program, most typographic scales are identical
save for a few numbers. And they have three guiding principles that are important to keep in mind:
&lt;strong&gt;they scale exponentially&lt;&#x2F;strong&gt;, are &lt;strong&gt;expressed in steps&lt;&#x2F;strong&gt;, and &lt;strong&gt;prioritize relative sizing over
absolute&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;principle-1-exponential-scaling&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#principle-1-exponential-scaling&quot; aria-label=&quot;Anchor link for: principle-1-exponential-scaling&quot;&gt;üîó&lt;&#x2F;a&gt;principle 1: exponential scaling&lt;&#x2F;h4&gt;
&lt;p&gt;The classic type scale you know from almost every word processor is:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6   7   8   9   10   11   12   14   16   18   21   24   30   36   48   60   72
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let‚Äôs look at the scale increase between the numbers:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6   7   8   9   10   11   12   14   16   18   21   24   30   36   48   60   72
------------------------------------------------------------------------------
  1   1   1   1    1    1    2    2    2    3    3    6    6    12   12   12
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notice how the numbers &lt;strong&gt;increase exponentially&lt;&#x2F;strong&gt; moving up the scale (it‚Äôs not a
mathematically-perfect exponential equation, but it still exponentially increases at regular
intervals):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;                   |
                +--+
                |
                |
                |
                |
                |
             +--+
             |
             |
          +--+
      +---+
------+
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The reason for this is that bigger font sizes require bigger increases for contrast. You can
probably recognize the difference between &lt;code&gt;6px&lt;&#x2F;code&gt; and &lt;code&gt;7px&lt;&#x2F;code&gt; type because that‚Äôs a 16.6% increase in
size. But you can‚Äôt tell the difference between &lt;code&gt;71px&lt;&#x2F;code&gt; and &lt;code&gt;72px&lt;&#x2F;code&gt; (1%). So &lt;code&gt;6 -&amp;gt; 7&lt;&#x2F;code&gt; make sense as a
typographic relationship, but not &lt;code&gt;71 -&amp;gt; 72&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Any type scale we make has to scale exponentially, which means we can mathematically automate it!
Yay!&lt;&#x2F;p&gt;
&lt;h4 id=&quot;principle-2-type-scales-are-expressed-in-steps&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#principle-2-type-scales-are-expressed-in-steps&quot; aria-label=&quot;Anchor link for: principle-2-type-scales-are-expressed-in-steps&quot;&gt;üîó&lt;&#x2F;a&gt;principle 2: type scales are expressed in steps&lt;&#x2F;h4&gt;
&lt;p&gt;Given type scales‚Äô exponential nature, it would follow that we treat them like exponents. For
example, when we‚Äôre dealing with powers of 2, how do we express it? Not as &lt;code&gt;2, 4, 8, 16‚Ä¶&lt;&#x2F;code&gt; but as
&lt;code&gt;2¬≤ 2¬≥ 2‚Å¥ ‚Ä¶&lt;&#x2F;code&gt;. Let‚Äôs apply that thinking to the type scale: we‚Äôll take the same scale, but number the
steps themselves. And we‚Äôll give the step itself a number (&lt;code&gt;step¬≤ step¬≥ step‚Å¥ ‚Ä¶&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6   7   8   9   10   11   12   14   16   18   21   24   30   36   48   60   72
------------------------------------------------------------------------------
1   2   3   4    5    6    7    8    9   10   11   12   13   14   15   16   17
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Thinking in numbered steps lets you remove all the complexity of conditional logic. You don‚Äôt have
to go ‚ÄúOK so I‚Äôm at &lt;code&gt;24px&lt;&#x2F;code&gt;, which means the next step up is &lt;code&gt;+6&lt;&#x2F;code&gt; but the next step down is &lt;code&gt;-3&lt;&#x2F;code&gt;.‚Äù
You simply think in terms of being at a certain step and going up or down.&lt;&#x2F;p&gt;
&lt;p&gt;In the end, your new scale is just a list of integers, which is much simpler to reason about (this
is only the bottom row from above):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;1   2   3   4    5    6    7    8    9   10   11   12   13   14   15   16   17
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Another way to think about this idea is to treat it the same way you would a music scale. You don‚Äôt
say ‚Äúfirst I‚Äôll play a &lt;code&gt;440 Hz&lt;&#x2F;code&gt; note followed by &lt;code&gt;493.8833 Hz&lt;&#x2F;code&gt;.‚Äù You simply say ‚ÄúI‚Äôll play an A
note, followed by B.‚Äù ‚ÄúA‚Äù and ‚ÄúB‚Äù are just shorthand names for the tones produced that are easier to
reason about. In the same way, you don‚Äôt have to remember that &lt;code&gt;9&lt;&#x2F;code&gt; was &lt;code&gt;16px&lt;&#x2F;code&gt;; you just know that
your font size is a &lt;code&gt;9&lt;&#x2F;code&gt; on the scale.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;principle-3-relationships-matter&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#principle-3-relationships-matter&quot; aria-label=&quot;Anchor link for: principle-3-relationships-matter&quot;&gt;üîó&lt;&#x2F;a&gt;principle 3: relationships matter&lt;&#x2F;h4&gt;
&lt;p&gt;Take a look at the following type samples:&lt;&#x2F;p&gt;
&lt;div style=&quot;display:grid;grid-gap:1.5rem;grid-template-columns:1fr 1fr&quot;&gt;
  &lt;div&gt;
    &lt;div&gt;&lt;strong&gt;A&lt;&#x2F;strong&gt;&lt;&#x2F;div&gt;
    &lt;div class=&quot;fs-u2 mb1 mt2&quot;&gt;&lt;strong&gt;Heading&lt;&#x2F;strong&gt;&lt;&#x2F;div&gt;
    &lt;div&gt;Paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph&lt;&#x2F;div&gt;
    &lt;div class=&quot;fs-d2 mt2&quot;&gt;Footnote&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div&gt;
    &lt;div&gt;&lt;strong&gt;B&lt;&#x2F;strong&gt;&lt;&#x2F;div&gt;
    &lt;div class=&quot;fs-u5 mb2 mt2&quot;&gt;&lt;strong&gt;Heading&lt;&#x2F;strong&gt;&lt;&#x2F;div&gt;
    &lt;div class=&quot;fs-u2 mb2&quot;&gt;Paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph paragraph&lt;&#x2F;div&gt;
    &lt;div&gt;Footnote&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;What if I told you that the ‚Äúparagraph‚Äù size from Column B was the same value as the ‚Äúheading‚Äù in
Column A? Inspect it if you don‚Äôt believe me! Our brains don‚Äôt perceive absolute value as much as we
think we do. Take this famous optical illusion from Edward H. Adelson:&lt;&#x2F;p&gt;
&lt;figure&gt;
  &lt;img src=&quot;&#x2F;assets&#x2F;posts&#x2F;responsive-type-scales-in-css&#x2F;checkerboard-illusion.jpg&quot; alt=&quot;Checkerboard illusion by Edward H. Adelson&quot; &#x2F;&gt;
  &lt;figcaption&gt;Are ‚ÄúA‚Äù and ‚ÄúB‚Äù really the same color? (Yes)&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;The tiles marked ‚ÄúA‚Äù and ‚ÄúB‚Äù are the exact same RGB value. Our brains perceive one as lighter than
the other because of their relationships‚Äî ‚ÄúB‚Äù is surrounded by darker colors, and ‚ÄúA‚Äù by lighter
colors. The illusion works because our brains are hardwired to perceive relative differences (if
you‚Äôre interested in this general subject, see &lt;em&gt;Interaction of Color&lt;&#x2F;em&gt; by Josef Albers).&lt;&#x2F;p&gt;
&lt;p&gt;Managing a typographic system is the same in that &lt;strong&gt;the relative sizes are more important than
absolute sizes.&lt;&#x2F;strong&gt; Something isn‚Äôt a heading because ‚Äúheadings are &lt;code&gt;32px&lt;&#x2F;code&gt; and that‚Äôs the law.‚Äù
Because as soon as your base size increases to &lt;code&gt;32px&lt;&#x2F;code&gt;, headings have to be proportionately bigger to
match! No, headings are only headings &lt;em&gt;if&lt;&#x2F;em&gt; they‚Äôre noticably larger than normal text.&lt;&#x2F;p&gt;
&lt;p&gt;So how do we deal with relationships? We know that a type scale is expressed in steps already, but
now we have to think in &lt;strong&gt;relative steps&lt;&#x2F;strong&gt; from one size to another. Taking the scale we had before,
let‚Äôs slide the bottom numbers to center around our base font size‚Äî&lt;code&gt;16px&lt;&#x2F;code&gt;‚Äîto measure how far away
other numbers are, relatively:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;6   7   8   9   10   11   12   14   16   18   21   24   30   36   48   60   72
------------------------------------------------------------------------------
-8 -7  -6  -5   -4   -3   -2   -1    0   +1   +2   +3   +4   +5   +6   +7   +8
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can easily see that &lt;code&gt;16 -&amp;gt; 18&lt;&#x2F;code&gt; is &lt;code&gt;+1 step&lt;&#x2F;code&gt;; &lt;code&gt;16 -&amp;gt; 30&lt;&#x2F;code&gt; is &lt;code&gt;+4 steps&lt;&#x2F;code&gt;; &lt;code&gt;16 -&amp;gt; 9&lt;&#x2F;code&gt; is &lt;code&gt;-4 steps&lt;&#x2F;code&gt;,
etc. If we move around the scale even more, we notice more interesting relationships. &lt;code&gt;16 -&amp;gt; 30&lt;&#x2F;code&gt; is
the same ‚Äúratio‚Äù as &lt;code&gt;30 -&amp;gt; 72&lt;&#x2F;code&gt;. In both cases, there are &lt;code&gt;4 steps&lt;&#x2F;code&gt; in between.&lt;&#x2F;p&gt;
&lt;p&gt;So now we start to get back to those &lt;code&gt;font-u4&lt;&#x2F;code&gt; CSS classes introduced earlier. See how no matter
what our base size started with, all that matters is applying the correct number of steps up or
down? If we just know that we want a heading to be 4 steps above our base size, it gets a
&lt;code&gt;&amp;lt;h1 class=&amp;quot;font-u4&amp;quot;&amp;gt;&lt;&#x2F;code&gt; class. And if we resize everything else on the page, that typographic
relationship is preserved. That means &lt;strong&gt;less code to write, and less code to manage.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It takes some work, and relearning, to remap how you‚Äôve thought about font sizes on the web. But
you‚Äôll be amazed at how much simpler things become when you do.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;building-your-own-scale&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#building-your-own-scale&quot; aria-label=&quot;Anchor link for: building-your-own-scale&quot;&gt;üîó&lt;&#x2F;a&gt;building your own scale&lt;&#x2F;h3&gt;
&lt;p&gt;Say you are getting the basics of the system, but that exact scale ratio just isn‚Äôt working for your
fonts. This is the basic mathematical formula used, of which full credit goes to
&lt;a href=&quot;https:&#x2F;&#x2F;spencermortensen.com&#x2F;articles&#x2F;typographic-scale&#x2F;&quot;&gt;Spencer Mortensen&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;ùêπ ^ (ùëõ &#x2F; ùõ•)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You have 2 basic settings to configure: &lt;code&gt;ùêπ&lt;&#x2F;code&gt;, the factor for multiplication, and &lt;code&gt;ùõ•&lt;&#x2F;code&gt;, the delta
(distance) between each step. Say you wanted to increase font size &lt;code&gt;2.25√ó&lt;&#x2F;code&gt; every &lt;code&gt;6&lt;&#x2F;code&gt; steps (my
personal favorite scale). That would look like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2.25 ^ (ùëõ &#x2F; 6)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The last variable, &lt;code&gt;ùëõ&lt;&#x2F;code&gt;, receives the step number you‚Äôre calculating. This is how the example back at
the beginning of the blog post was generated‚Äîby counting up (&lt;code&gt;1&lt;&#x2F;code&gt;, &lt;code&gt;2&lt;&#x2F;code&gt;, &lt;code&gt;3&lt;&#x2F;code&gt;, ‚Ä¶):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2.25 ^ (1&#x2F;6)      -&amp;gt;    1.1447142426
2.25 ^ (2&#x2F;6)      -&amp;gt;    1.3103706971
2.25 ^ (3&#x2F;6)      -&amp;gt;    1.5
2.25 ^ (4&#x2F;6)      -&amp;gt;    1.7170713638
2.25 ^ (5&#x2F;6)      -&amp;gt;    1.9655560457
2.25 ^ (6&#x2F;6)      -&amp;gt;    2.25
‚Ä¶
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;To go down the scale, use negative numbers (&lt;code&gt;-1&lt;&#x2F;code&gt;, &lt;code&gt;-2&lt;&#x2F;code&gt;, &lt;code&gt;-3&lt;&#x2F;code&gt;, ‚Ä¶):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;2.25 ^ (-1&#x2F;6)     -&amp;gt;    0.8735804647
2.25 ^ (-2&#x2F;6)     -&amp;gt;    0.7631428284
2.25 ^ (-3&#x2F;6)     -&amp;gt;    0.6666666667
2.25 ^ (-4&#x2F;6)     -&amp;gt;    0.5823869765
2.25 ^ (-5&#x2F;6)     -&amp;gt;    0.5087618856
2.25 ^ (-6&#x2F;6)     -&amp;gt;    0.4444444444
‚Ä¶
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;em&gt;Tip: want to calculate these a bit more automatically? Try
&lt;a href=&quot;https:&#x2F;&#x2F;codepen.io&#x2F;dangodev&#x2F;full&#x2F;ZEzmJaB&quot;&gt;this visual calculator&lt;&#x2F;a&gt; or see the &lt;code&gt;scale()&lt;&#x2F;code&gt; method in JS
in
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography&#x2F;blob&#x2F;master&#x2F;index.ts#L97&quot;&gt;responsive-typography&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Take the above values and plug them into CSS class names, CSS variables, Sass variables, JS
variables‚Ä¶ whatever your system uses. It‚Äôs universal because at the end of the day it‚Äôs just &lt;code&gt;em&lt;&#x2F;code&gt;s.&lt;&#x2F;p&gt;
&lt;p&gt;Now that you know how these numbers are made, you may find that the &lt;code&gt;2.25:6&lt;&#x2F;code&gt; scale isn‚Äôt producing
the results you expected. Try &lt;a href=&quot;https:&#x2F;&#x2F;codepen.io&#x2F;dangodev&#x2F;full&#x2F;ZEzmJaB&quot;&gt;playing with both numbers&lt;&#x2F;a&gt;
and seeing what you get. Try it in an existing app! The key is experimentation.&lt;&#x2F;p&gt;
&lt;p&gt;That wraps up the main meat of the blog posts. What follows from here are tips and FAQs to try and
take care of remaining questions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;appendix-1-faq&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#appendix-1-faq&quot; aria-label=&quot;Anchor link for: appendix-1-faq&quot;&gt;üîó&lt;&#x2F;a&gt;appendix 1: faq&lt;&#x2F;h2&gt;
&lt;h4 id=&quot;how-does-this-compare-to-x-y-or-z&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-does-this-compare-to-x-y-or-z&quot; aria-label=&quot;Anchor link for: how-does-this-compare-to-x-y-or-z&quot;&gt;üîó&lt;&#x2F;a&gt;how does this compare to x, y, or z?&lt;&#x2F;h4&gt;
&lt;p&gt;Ever since the idea of responsive design came about, we‚Äôve been inventing complex systems to manage
typography (or we‚Äôve been ignoring it and hoping the problem goes away üôà). There are too many to
list out here, but prominent ones I‚Äôve come across:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.typekit.com&#x2F;2016&#x2F;08&#x2F;17&#x2F;flexible-typography-with-css-locks&#x2F;&quot;&gt;Flexible Typography with CSS Locks&lt;&#x2F;a&gt;:
this is probably the closest to a technically-accurate system, but just look at this
‚Äúhuman-generated‚Äù CSS for &lt;strong&gt;a single font size&lt;&#x2F;strong&gt;:
&lt;code&gt;line-height: calc(1.3em + (1.5 - 1.3) * ((100vw - 21em)&#x2F;(35 - 21)))&lt;&#x2F;code&gt;. Does your brain work like
this? Mine doesn‚Äôt.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tailwindcss.com&#x2F;docs&#x2F;font-size&#x2F;#app&quot;&gt;Tailwind CSS&lt;&#x2F;a&gt;: here‚Äôs their &lt;strong&gt;simple example&lt;&#x2F;strong&gt;:
&lt;code&gt;&amp;lt;p class=&amp;quot;text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl ...&amp;quot;&amp;gt;&lt;&#x2F;code&gt;. Imagine managing all
that manually across all your markup? No thank you.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;kyleamathews.github.io&#x2F;typography.js&#x2F;&quot;&gt;Typography.js&lt;&#x2F;a&gt;: This requires a runtime? I‚Äôd rather
not have flickering font sizes as my pages load, thank you.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;@material&#x2F;typography&quot;&gt;Material UI&lt;&#x2F;a&gt;: Decent type scale, but not
responsive.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In short, other proposals have come about, but they‚Äôre either too complicated for human-written CSS.
Or they require a JS runtime for styling, which by default won‚Äôt work in a large number of setups.
I‚Äôd argue that responsive type scales strikes the best balance of simplicity and efficiency, and it
works in every setup.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;how-can-i-use-this-with-multiple-fonts&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-can-i-use-this-with-multiple-fonts&quot; aria-label=&quot;Anchor link for: how-can-i-use-this-with-multiple-fonts&quot;&gt;üîó&lt;&#x2F;a&gt;how can I use this with multiple fonts?&lt;&#x2F;h4&gt;
&lt;p&gt;When working with multiple fonts, sometimes one scale to ‚Äúrule them all‚Äù will work just fine. But a
common problem is having different fonts &lt;em&gt;appear&lt;&#x2F;em&gt; bigger or smaller than another at the same pixel
size. In that case, you‚Äôll need an adjustment number. Say your site has 2 fonts: one for body, and
another for headings. Say your heading font is feeling a little small when you try and use the same
scale for everything:&lt;&#x2F;p&gt;
&lt;!-- prettier-ignore --&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* fonts.css *&#x2F;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;root &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* your base scale *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;--font-u6: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.25em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u5: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.9655560456566725em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u4: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.7170713638299977em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u3: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.5em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u2: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.3103706971044482em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
  --font-u1: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.1447142425533319em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;

  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* heading scale *&#x2F;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;--heading-adjustment: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.5px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Increase the final size of the heading font *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u6 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u6) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u5) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u4 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u4) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u3) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u2) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;font-heading-u1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{ font-size: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--font-u1) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(--heading-adjustment)) }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have a &lt;code&gt;--heading-adjustment&lt;&#x2F;code&gt; CSS variable that we‚Äôre using to modify the final output value.
It‚Äôs being calculated at the end, so we are still using the same scale, but we can make a minor
visual tweak to make the typefaces work together better. Simply adjust &lt;code&gt;--heading-adjustment&lt;&#x2F;code&gt; to
taste. Rinse and repeat for any other typefaces you add to your project.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;can-i-use-this-in-css-in-js&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#can-i-use-this-in-css-in-js&quot; aria-label=&quot;Anchor link for: can-i-use-this-in-css-in-js&quot;&gt;üîó&lt;&#x2F;a&gt;can i use this in CSS-in-JS?&lt;&#x2F;h4&gt;
&lt;p&gt;Yes (try the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography#js&quot;&gt;JS import from responsive-typography&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;appendix-2-tips&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#appendix-2-tips&quot; aria-label=&quot;Anchor link for: appendix-2-tips&quot;&gt;üîó&lt;&#x2F;a&gt;appendix 2: tips&lt;&#x2F;h2&gt;
&lt;p&gt;Some various tips you may find helpful both in adopting responsive type scales, and thinking about
it in the context of your larger styling system.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If you‚Äôre struggling, try working backwards from pixels.&lt;&#x2F;strong&gt; Say you‚Äôre trying to generate your
own type scale, but you just can‚Äôt find the right &lt;code&gt;factor&lt;&#x2F;code&gt; and &lt;code&gt;delta&lt;&#x2F;code&gt; that feels right. Try
starting with an absolute type scale like &lt;code&gt;12px 14px 16px 18px 21px ‚Ä¶&lt;&#x2F;code&gt;, and work backwards into
the relative type scale. Use &lt;a href=&quot;https:&#x2F;&#x2F;codepen.io&#x2F;dangodev&#x2F;full&#x2F;ZEzmJaB&quot;&gt;the visual calculator&lt;&#x2F;a&gt; and
look on the right hand side. How close can you get to recreating your absolute scale? Now you have
more of a concrete goal to hit than simply turning dials until something ‚Äúfeels right.‚Äù&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Hardcode the scale if you can help it.&lt;&#x2F;strong&gt; It might be tempting to write a Sass or JS function to
generate the scale values. While there‚Äôs nothing wrong with that, know that &lt;strong&gt;if you change your
scale, you change your design.&lt;&#x2F;strong&gt; All the hard work and perfectly-tuned styles have now just gone
out the window. I like to not have this ‚Äútypographic restart button‚Äù so easily-accessible on a
team that may not understand the implications.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Rename the CSS classes to whatever you like.&lt;&#x2F;strong&gt; You may not like &lt;code&gt;font-u1&lt;&#x2F;code&gt; or &lt;code&gt;font-d1&lt;&#x2F;code&gt;. Generate
your &lt;a href=&quot;https:&#x2F;&#x2F;codepen.io&#x2F;dangodev&#x2F;full&#x2F;ZEzmJaB&quot;&gt;own scale&lt;&#x2F;a&gt; and come up with your own names! Keep
it short and sweet, but do what‚Äôs obvious to you.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Why not both‚Äîuse CSS AND CSS-in-JS!&lt;&#x2F;strong&gt; It doesn‚Äôt hurt to use CSS utility classes AND CSS
variables AND JS values in your CSS-in-JS. Sometimes you just want a global CSS class; other times
you need a value in your scoped CSS Modules. There‚Äôs no right or wrong here; simply do what saves
you and your team the most time, both in writing new code and managing existing code.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Reset component styles at the base level.&lt;&#x2F;strong&gt; This is a good practice beyond this blog post! You
always want your component‚Äôs styles to be
&lt;a href=&quot;https:&#x2F;&#x2F;visly.app&#x2F;blog&#x2F;layout-isolated-components&quot;&gt;isolated from one another&lt;&#x2F;a&gt;, which means
throwing some resets at the top level. When your components only look good in certain contexts but
not others, you‚Äôre fighting a losing battle.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Avoid global breakpoints if you can help it.&lt;&#x2F;strong&gt; Often people try and have a
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;free-code-camp&#x2F;the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862&quot;&gt;perfect breakpoint system&lt;&#x2F;a&gt;
in their app. It makes sense‚Äîit‚Äôs simple, and it‚Äôs encouraged in frameworks. But it‚Äôs bad because
global breakpoints don‚Äôt care about your actual content. They don‚Äôt care that half of your
components look weird as the page responds. Conversely, component-level media queries are &lt;strong&gt;always
perfect for every component.&lt;&#x2F;strong&gt; It‚Äôs a little extra code, sure, but it‚Äôs 100% scalable, and unlike
global breakpoints, adjusting one component‚Äôs breakpoint will never disrupt another. A little
redundancy can save a lot of headache down the line. Give it a try and prove me wrong!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If this post was helpful, please
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;drwpow&#x2F;responsive-typography&quot;&gt;give responsive-typography a star on GitHub&lt;&#x2F;a&gt; (or
give me feedback in the issues!)&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>4 tips for setting a playfulness¬†budget</title>
		<published>2019-11-06T00:00:00+00:00</published>
		<updated>2019-04-19T00:00:00+00:00</updated>
		<link href="https://pow.rs/blog/playfulness-budget/" type="text/html"/>
		<id>https://pow.rs/blog/playfulness-budget/</id>
		<content type="html">&lt;p&gt;All of us can recall being frustrated by a website or app, as well as inspired and entertained.
Sometimes both happen in the same app, either at different points in the journey, or if we revisit
in a a different state of mind. Application design walks a tightrope between utility and whimsy. An
app must use &lt;strong&gt;usable,&lt;&#x2F;strong&gt; drawing from familiar patterns. But if &lt;em&gt;everything&lt;&#x2F;em&gt; is copy-and-pasted from
elsewhere the experience will be forgettable. However, if &lt;em&gt;everything&lt;&#x2F;em&gt; reinvents the wheel you‚Äôve
created a frustrating experience that users are lost in (fine for an experiential art exhibit;
terrible for an app). How do you find a balance?&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôve always imagined this problem as having an imaginary bank or budget of ‚Äúplayfulness points‚Äù to
draw from. If you don‚Äôt spend any points, the experience at best ends up flat and dull; at worst
being a waste of users‚Äô time. But going deep into debt trying to be &lt;em&gt;too&lt;&#x2F;em&gt; whimsical and novel (a
tendency that both novice and ego-driven designers have) is worse as it‚Äôs practically unusable. I‚Äôve
tried to distill things I‚Äôve learned over the years into 4 tips to spend that ‚Äúbudget‚Äù wisely.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;1-spend-playfulness-points-during-slow-tasks&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#1-spend-playfulness-points-during-slow-tasks&quot; aria-label=&quot;Anchor link for: 1-spend-playfulness-points-during-slow-tasks&quot;&gt;üîó&lt;&#x2F;a&gt;1. spend playfulness points during slow tasks&lt;&#x2F;h2&gt;
&lt;p&gt;Every user when using your application will be in varying states of panic.&lt;&#x2F;p&gt;
&lt;p&gt;Booking a hotel, tickets for a show, or flight? These can feel &lt;strong&gt;rushed&lt;&#x2F;strong&gt;, sometimes intentionally,
and even feature anxiety-inducing timers, &lt;em&gt;BOOK NOW!&lt;&#x2F;em&gt; calls to action, and the impending sense that
someone will snag this before you do (&lt;em&gt;23 people have looked at this Airbnb in the last hour&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;This is &lt;strong&gt;not a good time to test the user‚Äôs patience with playfulness.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;However, based on the task, state of mind, and precise point in the process a user finds themself,
there can be opportunities to slow down and deliver something unexpected.&lt;&#x2F;p&gt;
&lt;figure&gt;
  &lt;img src=&quot;&#x2F;assets&#x2F;posts&#x2F;playfulness-budget&#x2F;pizza-tracker.jpg&quot; alt=&quot;Domino‚Äôs Pizza Tracker&quot; &#x2F;&gt;
  &lt;figcaption&gt;The Domino‚Äôs Pizza Tracker: probably my favorite example of a playful time-passer&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;The Domino‚Äôs Pizza Tracker is a legendary UX experience that gets everything right. It‚Äôs a fun,
animated tool that appends &lt;em&gt;at the end of a user‚Äôs task&lt;&#x2F;em&gt;, almost like the after-credits scenes in a
Marvel movie where it‚Äôs optional to stick around. What better way to kill a 30-minute wait for a
pizza to arrive than stare at the pizza tracker‚Äôs wfun themes, creative animations, voice acting,
and music?&lt;&#x2F;p&gt;
&lt;p&gt;Now imagine what that experience would be like while you‚Äôre trying to &lt;em&gt;order&lt;&#x2F;em&gt; the pizza, with kids
screaming and no time to spare. One experience is a lot of fun; the other, not so much. And context
is the only difference.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2-spend-playfulness-points-during-frustrating-tasks&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#2-spend-playfulness-points-during-frustrating-tasks&quot; aria-label=&quot;Anchor link for: 2-spend-playfulness-points-during-frustrating-tasks&quot;&gt;üîó&lt;&#x2F;a&gt;2. spend playfulness points during frustrating tasks&lt;&#x2F;h2&gt;
&lt;figure&gt;
  &lt;video autoplay=&quot;true&quot; controls muted loop playsinline width=&quot;1376&quot; height=&quot;600&quot;&gt;
    &lt;source src=&quot;&#x2F;assets&#x2F;posts&#x2F;playfulness-budget&#x2F;little-known-goods-carousel.mp4&quot; type=&quot;video&#x2F;mp4&quot; &#x2F;&gt;
  &lt;&#x2F;video&gt;
  &lt;figcaption&gt;Little Known Goods Carousel animation&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;Two pain points are the bane of my online shopping experience: image carousels and zoom views
(usually which are baked into the same component). I find it unwieldy on particular devices‚Äîusually
it‚Äòs built with largely mobile or desktop in mind at the expense of the other. Further, the actions
aren‚Äôt always clear, with hover, click, and manual zoom yielding wildly different outcomes depending
on the site you‚Äôre on.&lt;&#x2F;p&gt;
&lt;p&gt;For a recent &lt;a href=&quot;https:&#x2F;&#x2F;littleknowngoods.com&quot;&gt;ecommerce site I built&lt;&#x2F;a&gt;, I wanted to break the paradigm people were used to with
carousels so they put no prior expectations on it (save for the arrow keys). Using the metaphor of a
folding roadmap, I created a carousel that animates folding and unfolding as you click through the
slides. For the zoom view, hover reveals a larger image, while on mobile the zoom is disabled and
users intuitively pinch-zoom to enhance (with all positioning JS disabled so your image doesn‚Äôt fly
off into space while pinch-zooming).&lt;&#x2F;p&gt;
&lt;p&gt;While you can be the judge on how well I did, the intent was to deliver a component that people
hadn‚Äôt seen before‚Äîa 3D, folded carousel‚Äîin order to not have expectations be placed upon it. And in
injecting a bit of whimsy, hopefully it saves most visitors from a bad carousel experience by
turning it on its head and making it playful.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-spend-playfulness-points-on-first-impressions&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#3-spend-playfulness-points-on-first-impressions&quot; aria-label=&quot;Anchor link for: 3-spend-playfulness-points-on-first-impressions&quot;&gt;üîó&lt;&#x2F;a&gt;3. spend playfulness points on first impressions&lt;&#x2F;h2&gt;
&lt;figure&gt;
  &lt;video autoplay=&quot;true&quot; controls muted loop playsinline width=&quot;1375&quot; height=&quot;600&quot;&gt;
    &lt;source src=&quot;&#x2F;assets&#x2F;posts&#x2F;playfulness-budget&#x2F;playdate.mp4&quot; type=&quot;video&#x2F;mp4&quot; &#x2F;&gt;
  &lt;&#x2F;video&gt;
  &lt;figcaption&gt;A 3D, rotatable portable game console right at the top of the page? Yes, please.&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;A user‚Äôs first several seconds on a site is a critical time for them. They‚Äôre orienting to the
site‚Äîto the layout, colors, language, etc.‚Äîwhile also having something they want to accomplish.
While often times this is a winding path for the user to clarify what they want while orienting
themselves to a new interface, that first few seconds that a user suspends judgment can be just the
right moment for playfulness.&lt;&#x2F;p&gt;
&lt;p&gt;Greeting a user, for instance, with a fun animation on page load doesn‚Äôt disrupt their task while
they figure out where it is they need to go.&lt;&#x2F;p&gt;
&lt;p&gt;Granted, there are good and bad types of animation. A good animation would simply be adding motion
to the hero graphic, where a bad animation would be hiding the top menu and animating in items
one-by-one so the user has to wait painfully to even start their task. But assuming you executed the
former, setting an impression for playfulness right off the bat can pay dividends later.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;4-spend-playfulness-points-during-successes&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#4-spend-playfulness-points-during-successes&quot; aria-label=&quot;Anchor link for: 4-spend-playfulness-points-during-successes&quot;&gt;üîó&lt;&#x2F;a&gt;4. spend playfulness points during successes&lt;&#x2F;h2&gt;
&lt;p&gt;Errors are frustrating. Messages like &lt;code&gt;Oops! Something went wrong!&lt;&#x2F;code&gt; can be flippant and tone-deaf,
especially when it resulted in data loss. Believe it or not, that was an actual error message I
encountered that left me unable to pay a bill! &lt;em&gt;Oops!?&lt;&#x2F;em&gt; More like ‚ÄúOops! I accidentally cancelled
your horrible service!‚Äù&lt;&#x2F;p&gt;
&lt;p&gt;In light of so many failures we encounter on the web, successes are something that should be
celebrated! üéâ Did a user finish sending an email? Add a fun illustration and some congratulatory
copy on that succes page! Has a user reached a certain milestone in your app (miles walked,
achievement reached, numbers hit)? Add a cool badge to their profile.&lt;&#x2F;p&gt;
&lt;p&gt;Unexpected rewards may result in the most positively-perceived experiences. So let‚Äôs try and help
the humans that use our application feel appreciated because they‚Äôre worth it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;so-how-big-is-my-playfulness-budget&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#so-how-big-is-my-playfulness-budget&quot; aria-label=&quot;Anchor link for: so-how-big-is-my-playfulness-budget&quot;&gt;üîó&lt;&#x2F;a&gt;so how big is my ‚Äúplayfulness budget?‚Äù&lt;&#x2F;h2&gt;
&lt;p&gt;The natural question after reading all this is‚Äî‚Äùhow much can I spend?‚Äù ‚ÄúHow far is too far?‚Äù You
probably saw this coming: &lt;strong&gt;it depends&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Just like our personal relationships, sometimes a loved one reaching out to talk can be a
life-saver; other times a burden because you just really don‚Äôt have the time right now. In app
design, ‚Äúmoments of delight‚Äù can either be a joy or a nightmare depending on the mindset of the
user, the ‚Äúpanic level‚Äù they‚Äôre feeling, and what you‚Äôre offering them.&lt;&#x2F;p&gt;
&lt;p&gt;When we‚Äôre dealing with people, &lt;em&gt;too much&lt;&#x2F;em&gt; efficiency can be boring and detrimental to the squishy
humans you‚Äôre guiding. Sometimes the straightest roads can have us feeling sleepy behind the wheel a
bit. Sometimes the little detours, the fun little dips and curves, &lt;em&gt;make&lt;&#x2F;em&gt; the journey memorable.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
